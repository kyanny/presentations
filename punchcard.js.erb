var fullWidth = document.getElementById('graph').offsetWidth;
var graphPadding = 80;
var width = (fullWidth-graphPadding);
var fullHeight = 380;
var height = (fullHeight-30);
var years = <%= @years.to_json %>;
var months = ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"];

var palette = d3.select("#graph").append("svg").
    attr("width", fullWidth).
    attr("height", fullHeight);

var yearGroup = palette.append("g");
var monthGroup = palette.append("g");
var circleGroup = palette.append("g");

$(document).ready(function(){
  var data = <%= @data1.to_json %>;
  x = {
    min:  0,
    max:  width
  }
  x.step = x.max/12;

  y = {
    min:  0,
    max:  height
  }
  y.step = y.max/6;

  var yearText = yearGroup.selectAll("text").data(years).enter().append("text");
  var yearLabel = yearText.attr("x", 0).attr("y", function(d) {
    return y.step*(years.indexOf(d)+1);
  }).text(function(d) {
    return d;
  }).attr("font-family", "sans-serif").attr("font-size", "12px");
  var monthText = monthGroup.selectAll("text").data(months).enter().append("text");
  var monthLabel = monthText.attr("x", function(d) {
    return x.step*(months.indexOf(d)+1);
  }).attr("y", y.max+20).text(function(d) {
    return d;
  }).attr("font-family", "sans-selectAll").attr("font-size", "12px");

  var scaleData = [];

  for (i in data){
    scaleData.push(data[i][2])
  }

  z = {
    data: scaleData
  }
  z.max    = d3.max(z.data)
  z.min    = d3.min(z.data)
  z.domain = [z.min, z.max]
  z.range  = [4, 15]
  z.scale  = d3.scale.linear().
    domain(z.domain).
    range(z.range);

  for (var i in data) {
    tuple = data[i];
    commits = tuple[2];
    if (commits > 0) {
      cy    = y.step*(tuple[0]+1)-5;
      cx    = x.step*(tuple[1]+1)+11;
      r     = z.scale(commits);
      title = "Commits: " + commits;

      c = circleGroup.append("circle")
        .attr("cx",cx)
        .attr("cy",cy)
        .attr("r",r)
        .attr("title",title)
        .attr("class","hover-circle");

    }
  }


});
